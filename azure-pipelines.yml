pool:
  vmImage: 'vs2017-win2016'

name: $(SourceBranchName)+1.$(Date:yyyy.MM)$(Rev:.r)

steps:
- script: echo Starting build pipeline!
  displayName: 'Hello from Albanian Xrm'

- powershell: |
    echo "##vso[task.setvariable variable=configuration;isOutput=true]$(IF($env:BRANCH -eq "refs/heads/master"){"Azure Pipelines"}else{"release"})"
    echo "##vso[task.setvariable variable=BuildNumber;isOutput=true]$(($env:BuildNumber).Substring(($env:BuildNumber).LastIndexOf('+')+1))"
  name: MyVars
  env: 
    BRANCH: $(Build.SourceBranch)
    BuildNumber: $(Build.BuildNumber)
  displayName: 'Set Configuration Variable'

- task: SonarCloudPrepare@1
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')  
  inputs:
    SonarCloud: 'AlbanianXrm SonarCloud'
    organization: 'albanian-xrm'
    scannerMode: 'MSBuild'
    projectKey: 'Albanian-Xrm_Solution_Packager'
    projectName: 'Solution_Packager'

- task: NuGetToolInstaller@0
  inputs:
    versionSpec: '4.9.x' 
  displayName: 'Install NuGet 4.9.x'

- task: NuGetCommand@2
  displayName: 'Restoring NuGet packages'
  inputs:
    command: 'restore'
    restoreSolution: '**/*.sln'
    feedsToUse: 'select'

- task: MSBuild@1
  inputs:
    solution: '**/*.sln'
    configuration: $(MyVars.configuration)
    msbuildArguments: '/p:Version=$(MyVars.BuildNumber)'
  displayName: 'Building Solution'

- task: SonarCloudAnalyze@1
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')  

- task: SonarCloudPublish@1
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')  
  inputs:
    pollingTimeoutSec: '300'

- task: NuGetCommand@2
  displayName: 'Creating NuGet package'
  inputs:
    command: 'pack'
    packagesToPack: '**/*.nuspec'
    packDestination: '$(Build.ArtifactStagingDirectory)/NuGet'
    buildProperties: version=$(MyVars.BuildNumber)
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))  

- task: PublishBuildArtifacts@1
  displayName: 'Publishing NuGet package to pipeline'
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)/NuGet'
    artifactName: 'NuGet Package'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))  

- powershell: |
    New-Item -Type dir Plugins
    Copy-Item AlbanianXrm.SolutionPackager\bin\Release\net462\AlbanianXrm.SolutionPackager.dll -Destination Plugins\AlbanianXrm.SolutionPackager.dll
    New-Item -Type dir Plugins\AlbanianXrm.SolutionPackager
    Copy-Item AlbanianXrm.SolutionPackager\bin\Release\net462\AlbanianXrm.SolutionPackager.Tool.dll -Destination Plugins\AlbanianXrm.SolutionPackager\AlbanianXrm.SolutionPackager.Tool.dll
    New-Item -Type dir Plugins\AlbanianXrm.SolutionPackager\it
    Copy-Item AlbanianXrm.SolutionPackager\bin\Release\net462\it\AlbanianXrm.SolutionPackager.Tool.resources.dll -Destination Plugins\AlbanianXrm.SolutionPackager\it\AlbanianXrm.SolutionPackager.Tool.resources.dll
    Compress-Archive -Path plugins\* -DestinationPath Plugins.zip
  displayName: 'Create zip for GitHub'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))  

- task: PublishBuildArtifacts@1
  displayName: 'Publishing NuGet package to pipeline'
  inputs:
    pathtoPublish: 'Plugins.zip'
    artifactName: 'Plugin Package'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))  
    
    