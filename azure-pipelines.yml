trigger:
- master

pool:
  vmImage: 'vs2017-win2016'

name: 1.$(Date:yyyy.MM)$(Rev:.r)

steps:
- script: echo Starting build pipeline!
  displayName: 'Hello from Albanian Xrm'

- powershell: echo "##vso[task.setvariable variable=configuration;isOutput=true]$(IF($env:BRANCH -eq "refs/heads/master"){"Azure Pipelines"}else{"release"})"
  name: MyVars
  env: 
    BRANCH: $(Build.SourceBranch)
  displayName: 'Set Configuration Variable'

- task: NuGetToolInstaller@0
  inputs:
    versionSpec: '4.9.x' 
  displayName: 'Install NuGet 4.9.x'

- task: NuGetCommand@2
  displayName: 'Restoring NuGet packages'
  inputs:
    command: 'restore'
    restoreSolution: '**/*.sln'
    feedsToUse: 'select'

- task: MSBuild@1
  inputs:
    solution: '**/*.sln'
    configuration: $(MyVars.configuration)
    msbuildArguments: '/p:Version=$(Build.BuildNumber)'
  displayName: 'Building Solution'

- task: NuGetCommand@2
  displayName: 'Creating NuGet package'
  inputs:
    command: 'pack'
    packagesToPack: '**/*.nuspec'
    packDestination: '$(Build.ArtifactStagingDirectory)'
    buildProperties: version=$(Build.BuildNumber)
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))  

- task: PublishBuildArtifacts@1
  displayName: 'Publishing NuGet package to pipeline'
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'NuGet Package'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))  
