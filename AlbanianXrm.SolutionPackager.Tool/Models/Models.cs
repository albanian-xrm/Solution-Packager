//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AlbanianXrm.SolutionPackager.Models
{
	
	
	/// <summary>
	/// Process whose execution can proceed independently or in the background.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("asyncoperation")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.1.0.67")]
	public partial class AsyncOperation : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public AsyncOperation() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "asyncoperation";
		
		public const int EntityTypeCode = 4700;
		
		/// <summary>
		/// Unique identifier of the system job.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("asyncoperationid")]
		public System.Nullable<System.Guid> AsyncOperationId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("asyncoperationid");
			}
			set
			{
				this.SetAttributeValue("asyncoperationid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("asyncoperationid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.AsyncOperationId = value;
			}
		}
		
		/// <summary>
		/// Date and time when the system job was completed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("completedon")]
		public System.Nullable<System.DateTime> CompletedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("completedon");
			}
		}
		
		/// <summary>
		/// Date and time when the system job was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Error code returned from a canceled system job.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("errorcode")]
		public System.Nullable<int> ErrorCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("errorcode");
			}
		}
		
		/// <summary>
		/// Message related to the system job.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("message")]
		public string Message
		{
			get
			{
				return this.GetAttributeValue<string>("message");
			}
		}
		
		/// <summary>
		/// Name of the message that started this system job.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("messagename")]
		public string MessageName
		{
			get
			{
				return this.GetAttributeValue<string>("messagename");
			}
			set
			{
				this.SetAttributeValue("messagename", value);
			}
		}
		
		/// <summary>
		/// Type of the system job.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("operationtype")]
		public System.Nullable<OptionSets.OperationType> OperationType
		{
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue attributeValue = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("operationtype");
				if ((attributeValue != null))
				{
					return ((OptionSets.OperationType)(System.Enum.ToObject(typeof(OptionSets.OperationType), attributeValue.Value)));
				}
				else
				{
					return null;
				}
			}
			set
			{
				if ((value == null))
				{
					this.SetAttributeValue("operationtype", value);
				}
				else
				{
					this.SetAttributeValue("operationtype", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
			}
		}
		
		/// <summary>
		/// Date and time when the system job was started.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("startedon")]
		public System.Nullable<System.DateTime> StartedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("startedon");
			}
		}
		
		/// <summary>
		/// Status of the system job.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public System.Nullable<OptionSets.StateCode> StateCode
		{
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue attributeValue = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((attributeValue != null))
				{
					return ((OptionSets.StateCode)(System.Enum.ToObject(typeof(OptionSets.StateCode), attributeValue.Value)));
				}
				else
				{
					return null;
				}
			}
			set
			{
				if ((value == null))
				{
					this.SetAttributeValue("statecode", value);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
			}
		}
		
		/// <summary>
		/// Reason for the status of the system job.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public System.Nullable<OptionSets.StatusCode> StatusCode
		{
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue attributeValue = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
				if ((attributeValue != null))
				{
					return ((OptionSets.StatusCode)(System.Enum.ToObject(typeof(OptionSets.StatusCode), attributeValue.Value)));
				}
				else
				{
					return null;
				}
			}
			set
			{
				if ((value == null))
				{
					this.SetAttributeValue("statuscode", value);
				}
				else
				{
					this.SetAttributeValue("statuscode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
			}
		}
		
		public sealed class Fields
		{
			
			/// <summary>
			/// Unique identifier of the system job.
			/// </summary>
			public const string AsyncOperationId = "asyncoperationid";
			
			public const string Id = "asyncoperationid";
			
			/// <summary>
			/// Date and time when the system job was completed.
			/// </summary>
			public const string CompletedOn = "completedon";
			
			/// <summary>
			/// Date and time when the system job was created.
			/// </summary>
			public const string CreatedOn = "createdon";
			
			/// <summary>
			/// Error code returned from a canceled system job.
			/// </summary>
			public const string ErrorCode = "errorcode";
			
			/// <summary>
			/// Message related to the system job.
			/// </summary>
			public const string Message = "message";
			
			/// <summary>
			/// Name of the message that started this system job.
			/// </summary>
			public const string MessageName = "messagename";
			
			/// <summary>
			/// Type of the system job.
			/// </summary>
			public const string OperationType = "operationtype";
			
			/// <summary>
			/// Date and time when the system job was started.
			/// </summary>
			public const string StartedOn = "startedon";
			
			/// <summary>
			/// Status of the system job.
			/// </summary>
			public const string StateCode = "statecode";
			
			/// <summary>
			/// Reason for the status of the system job.
			/// </summary>
			public const string StatusCode = "statuscode";
		}
		
		public sealed class OptionSets
		{
			
			[System.Runtime.Serialization.DataContractAttribute()]
			[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.1.0.67")]
			public enum StateCode
			{
				
				/// <summary>
				/// Ready
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				Ready = 0,
				
				/// <summary>
				/// Suspended
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				Suspended = 1,
				
				/// <summary>
				/// Locked
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				Locked = 2,
				
				/// <summary>
				/// Completed
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				Completed = 3,
			}
			
			[System.Runtime.Serialization.DataContractAttribute()]
			[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.1.0.67")]
			public enum OperationType
			{
				
				/// <summary>
				/// System Event
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				SystemEvent = 1,
				
				/// <summary>
				/// Bulk Email
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				BulkEmail = 2,
				
				/// <summary>
				/// Import File Parse
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				ImportFileParse = 3,
				
				/// <summary>
				/// Transform Parse Data
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				TransformParseData = 4,
				
				/// <summary>
				/// Import
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				Import = 5,
				
				/// <summary>
				/// Activity Propagation
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				ActivityPropagation = 6,
				
				/// <summary>
				/// Duplicate Detection Rule Publish
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				DuplicateDetectionRulePublish = 7,
				
				/// <summary>
				/// Bulk Duplicate Detection
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				BulkDuplicateDetection = 8,
				
				/// <summary>
				/// SQM Data Collection
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				SQMDataCollection = 9,
				
				/// <summary>
				/// Workflow
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				Workflow = 10,
				
				/// <summary>
				/// Quick Campaign
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				QuickCampaign = 11,
				
				/// <summary>
				/// Matchcode Update
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				MatchcodeUpdate = 12,
				
				/// <summary>
				/// Bulk Delete
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				BulkDelete = 13,
				
				/// <summary>
				/// Deletion Service
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				DeletionService = 14,
				
				/// <summary>
				/// Index Management
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				IndexManagement = 15,
				
				/// <summary>
				/// Collect Organization Statistics
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				CollectOrganizationStatistics = 16,
				
				/// <summary>
				/// Import Subprocess
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				ImportSubprocess = 17,
				
				/// <summary>
				/// Calculate Organization Storage Size
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				CalculateOrganizationStorageSize = 18,
				
				/// <summary>
				/// Collect Organization Database Statistics
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				CollectOrganizationDatabaseStatistics = 19,
				
				/// <summary>
				/// Collection Organization Size Statistics
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				CollectionOrganizationSizeStatistics = 20,
				
				/// <summary>
				/// Database Tuning
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				DatabaseTuning = 21,
				
				/// <summary>
				/// Calculate Organization Maximum Storage Size
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				CalculateOrganizationMaximumStorageSize = 22,
				
				/// <summary>
				/// Bulk Delete Subprocess
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				BulkDeleteSubprocess = 23,
				
				/// <summary>
				/// Update Statistic Intervals
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				UpdateStatisticIntervals = 24,
				
				/// <summary>
				/// Organization Full Text Catalog Index
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				OrganizationFullTextCatalogIndex = 25,
				
				/// <summary>
				/// Database log backup
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				Databaselogbackup = 26,
				
				/// <summary>
				/// Update Contract States
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				UpdateContractStates = 27,
				
				/// <summary>
				/// DBCC SHRINKDATABASE maintenance job
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				DBCCSHRINKDATABASEmaintenancejob = 28,
				
				/// <summary>
				/// DBCC SHRINKFILE maintenance job
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				DBCCSHRINKFILEmaintenancejob = 29,
				
				/// <summary>
				/// Reindex all indices maintenance job
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				Reindexallindicesmaintenancejob = 30,
				
				/// <summary>
				/// Storage Limit Notification
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				StorageLimitNotification = 31,
				
				/// <summary>
				/// Cleanup inactive workflow assemblies
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				Cleanupinactiveworkflowassemblies = 32,
				
				/// <summary>
				/// Recurring Series Expansion
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				RecurringSeriesExpansion = 35,
				
				/// <summary>
				/// Import Sample Data
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				ImportSampleData = 38,
				
				/// <summary>
				/// Goal Roll Up
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				GoalRollUp = 40,
				
				/// <summary>
				/// Audit Partition Creation
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				AuditPartitionCreation = 41,
				
				/// <summary>
				/// Check For Language Pack Updates
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				CheckForLanguagePackUpdates = 42,
				
				/// <summary>
				/// Provision Language Pack
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				ProvisionLanguagePack = 43,
				
				/// <summary>
				/// Update Organization Database
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				UpdateOrganizationDatabase = 44,
				
				/// <summary>
				/// Update Solution
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				UpdateSolution = 45,
				
				/// <summary>
				/// Regenerate Entity Row Count Snapshot Data
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				RegenerateEntityRowCountSnapshotData = 46,
				
				/// <summary>
				/// Regenerate Read Share Snapshot Data
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				RegenerateReadShareSnapshotData = 47,
				
				/// <summary>
				/// Outgoing Activity
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				OutgoingActivity = 50,
				
				/// <summary>
				/// Incoming Email Processing
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				IncomingEmailProcessing = 51,
				
				/// <summary>
				/// Mailbox Test Access
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				MailboxTestAccess = 52,
				
				/// <summary>
				/// Encryption Health Check
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				EncryptionHealthCheck = 53,
				
				/// <summary>
				/// Execute Async Request
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				ExecuteAsyncRequest = 54,
				
				/// <summary>
				/// Post to Yammer
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				PosttoYammer = 49,
				
				/// <summary>
				/// Update Entitlement States
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				UpdateEntitlementStates = 56,
				
				/// <summary>
				/// Calculate Rollup Field
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				CalculateRollupField = 57,
				
				/// <summary>
				/// Mass Calculate Rollup Field
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				MassCalculateRollupField = 58,
				
				/// <summary>
				/// Import Translation
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				ImportTranslation = 59,
				
				/// <summary>
				/// Convert Date And Time Behavior
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				ConvertDateAndTimeBehavior = 62,
				
				/// <summary>
				/// EntityKey Index Creation
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				EntityKeyIndexCreation = 63,
				
				/// <summary>
				/// Update Knowledge Article States
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				UpdateKnowledgeArticleStates = 65,
				
				/// <summary>
				/// Resource Booking Sync
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				ResourceBookingSync = 68,
				
				/// <summary>
				/// Relationship Assistant Cards
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				RelationshipAssistantCards = 69,
				
				/// <summary>
				/// Cleanup Solution Components
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				CleanupSolutionComponents = 71,
				
				/// <summary>
				/// App Module Metadata Operation
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				AppModuleMetadataOperation = 72,
				
				/// <summary>
				/// ALM Anomaly Detection Operation
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				ALMAnomalyDetectionOperation = 73,
				
				/// <summary>
				/// Flow Notification
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				FlowNotification = 75,
				
				/// <summary>
				/// Ribbon Client Metadata Operation
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				RibbonClientMetadataOperation = 76,
				
				/// <summary>
				/// CallbackRegistration Expander Operation
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				CallbackRegistrationExpanderOperation = 79,
				
				/// <summary>
				/// CascadeAssign
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				CascadeAssign = 90,
				
				/// <summary>
				/// CascadeDelete
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				CascadeDelete = 91,
				
				/// <summary>
				/// Event Expander Operation
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				EventExpanderOperation = 92,
				
				/// <summary>
				/// Import Solution Metadata
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				ImportSolutionMetadata = 93,
				
				/// <summary>
				/// Bulk Delete File Attachment
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				BulkDeleteFileAttachment = 94,
				
				/// <summary>
				/// Refresh Business Unit for Records Owned By Principal
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				RefreshBusinessUnitforRecordsOwnedByPrincipal = 95,
				
				/// <summary>
				/// Revoke Inherited Access
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				RevokeInheritedAccess = 96,
				
				/// <summary>
				/// Provision language for user
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				Provisionlanguageforuser = 201,
				
				/// <summary>
				/// Cascade Grant or Revoke Access Version Tracking Async Operation
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				CascadeGrantorRevokeAccessVersionTrackingAsyncOperation = 12801,
				
				/// <summary>
				/// AI Builder Training Events
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				AIBuilderTrainingEvents = 190690091,
				
				/// <summary>
				/// AI Builder Prediction Events
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				AIBuilderPredictionEvents = 190690092,
				
				/// <summary>
				/// Create Or Refresh Virtual Entity
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				CreateOrRefreshVirtualEntity = 98,
			}
			
			[System.Runtime.Serialization.DataContractAttribute()]
			[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.1.0.67")]
			public enum StatusCode
			{
				
				/// <summary>
				/// Waiting For Resources
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				WaitingForResources = 0,
				
				/// <summary>
				/// Waiting
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				Waiting = 10,
				
				/// <summary>
				/// In Progress
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				InProgress = 20,
				
				/// <summary>
				/// Pausing
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				Pausing = 21,
				
				/// <summary>
				/// Canceling
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				Canceling = 22,
				
				/// <summary>
				/// Succeeded
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				Succeeded = 30,
				
				/// <summary>
				/// Failed
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				Failed = 31,
				
				/// <summary>
				/// Canceled
				/// </summary>
				[System.Runtime.Serialization.EnumMemberAttribute()]
				Canceled = 32,
			}
		}
	}
	
	/// <summary>
	/// For internal use only.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("importjob")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.1.0.67")]
	public partial class ImportJob : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public ImportJob() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "importjob";
		
		public const int EntityTypeCode = 9107;
		
		/// <summary>
		/// Unique identifier of the import job.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importjobid")]
		public System.Nullable<System.Guid> ImportJobId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("importjobid");
			}
			set
			{
				this.SetAttributeValue("importjobid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importjobid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.ImportJobId = value;
			}
		}
		
		/// <summary>
		/// Import Progress Percentage.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("progress")]
		public System.Nullable<double> Progress
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<double>>("progress");
			}
			set
			{
				this.SetAttributeValue("progress", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionname")]
		public string SolutionName
		{
			get
			{
				return this.GetAttributeValue<string>("solutionname");
			}
			set
			{
				this.SetAttributeValue("solutionname", value);
			}
		}
		
		public sealed class Fields
		{
			
			/// <summary>
			/// Unique identifier of the import job.
			/// </summary>
			public const string ImportJobId = "importjobid";
			
			public const string Id = "importjobid";
			
			/// <summary>
			/// Import Progress Percentage.
			/// </summary>
			public const string Progress = "progress";
			
			/// <summary>
			/// Unique identifier of the solution.
			/// </summary>
			public const string SolutionName = "solutionname";
		}
	}
	
	/// <summary>
	/// A solution which contains CRM customizations.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("solution")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.1.0.67")]
	public partial class Solution : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public Solution() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "solution";
		
		public const int EntityTypeCode = 7100;
		
		/// <summary>
		/// User display name for the solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("friendlyname")]
		public string FriendlyName
		{
			get
			{
				return this.GetAttributeValue<string>("friendlyname");
			}
			set
			{
				this.SetAttributeValue("friendlyname", value);
			}
		}
		
		/// <summary>
		/// Indicates whether the solution is managed or unmanaged.
		/// Possible values can be found in <see cref="OptionSets.IsManaged" />
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanaged")]
		public System.Nullable<bool> IsManaged
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismanaged");
			}
			set
			{
				this.SetAttributeValue("ismanaged", value);
			}
		}
		
		/// <summary>
		/// Indicates whether the solution is visible outside of the platform.
		/// Possible values can be found in <see cref="OptionSets.IsVisible" />
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isvisible")]
		public System.Nullable<bool> IsVisible
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isvisible");
			}
			set
			{
				this.SetAttributeValue("isvisible", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionid")]
		public System.Nullable<System.Guid> SolutionId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("solutionid");
			}
			set
			{
				this.SetAttributeValue("solutionid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.SolutionId = value;
			}
		}
		
		/// <summary>
		/// The unique name of this solution
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("uniquename")]
		public string UniqueName
		{
			get
			{
				return this.GetAttributeValue<string>("uniquename");
			}
			set
			{
				this.SetAttributeValue("uniquename", value);
			}
		}
		
		/// <summary>
		/// Solution version, used to identify a solution for upgrades and hotfixes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("version")]
		public string Version
		{
			get
			{
				return this.GetAttributeValue<string>("version");
			}
			set
			{
				this.SetAttributeValue("version", value);
			}
		}
		
		public sealed class Fields
		{
			
			/// <summary>
			/// User display name for the solution.
			/// </summary>
			public const string FriendlyName = "friendlyname";
			
			/// <summary>
			/// Indicates whether the solution is managed or unmanaged.
			/// </summary>
			public const string IsManaged = "ismanaged";
			
			/// <summary>
			/// Indicates whether the solution is visible outside of the platform.
			/// </summary>
			public const string IsVisible = "isvisible";
			
			/// <summary>
			/// Unique identifier of the solution.
			/// </summary>
			public const string SolutionId = "solutionid";
			
			public const string Id = "solutionid";
			
			/// <summary>
			/// The unique name of this solution
			/// </summary>
			public const string UniqueName = "uniquename";
			
			/// <summary>
			/// Solution version, used to identify a solution for upgrades and hotfixes.
			/// </summary>
			public const string Version = "version";
		}
		
		public sealed class OptionSets
		{
			
			public class IsManaged
			{
				
				/// <summary>
				/// Unmanaged
				/// </summary>
				public const bool Unmanaged = false;
				
				/// <summary>
				/// Managed
				/// </summary>
				public const bool Managed = true;
			}
			
			public class IsVisible
			{
				
				/// <summary>
				/// No
				/// </summary>
				public const bool No = false;
				
				/// <summary>
				/// Yes
				/// </summary>
				public const bool Yes = true;
			}
		}
	}
}
